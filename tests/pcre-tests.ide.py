import re
import GPS
from os.path import *
import os

REGISTRATION_TEMPLATE =\
    """   Aunit.Test_Cases.Registration.Register_Routine """ \
    """(Test, %(name)s'Access, "%(name)s");"""

TEMPLATE = """-- @autogenerated
separate (%(parent)s)
procedure Register_Tests (Test : in out Test_Case) is
begin
%(registrations)s
end Register_Tests;
"""


matcher = re.compile(r"""(\s*procedure\s+(\S+)\s*\(\s*\S+\s*:""" +
                     r"""\s*in\s+out\s*\S*?Test_Case'Class\s*\)\s*""" +
                     r"""is.*|package\s+body\s+(\S+)\s+is.*)""")


def ada2file(name):
    return name.lower().replace(".", "-")


def generate(name, src):
    src = src.name()
    registrations = []
    parent = ""

    outpath = splitext(src)[0] + ada2file(".Register_Tests") + ".adb"
    if not exists(outpath) and splitext(src)[1] != ".adb":
        return
    os.chmod(outpath, 0o664)
    print ("Regenerating:%s" % outpath)
    with open(src) as inf:
        for line in inf:
            matches = matcher.match(line)
            if matches:
                if matches.group(3):
                    parent = matches.group(3)
                elif matches.group(2):
                    registrations.append(REGISTRATION_TEMPLATE %
                                         {"name": matches.group(2)})
    with open(outpath, "w") as outf:
        outf.write(TEMPLATE % {"parent": parent,
                               "registrations": "\n".join(registrations)})

    os.chmod(outpath, 0o444)

GPS.Hook("file_saved").add(generate)
